# In your Git config repo: shortener-service.yml
server:
  port: 8081 # Or any port you want shortener-service to run on

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/ # Points to your Eureka server
    # Optional: fine-tune registration behavior
    # instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    # prefer-ip-address: true
  instance:
    hostname: shortener-service # Or specify IP if prefer-ip-address is true and needed
    # lease-renewal-interval-in-seconds: 10 # Example: Heartbeat interval
    # lease-expiration-duration-in-seconds: 30 # Example: Expiration

# Add any other specific configurations for shortener_service
# For example, if it uses MongoDB:
spring:
  data:
    mongodb:
      uri: mongodb://root:rootpw@localhost:27017/urlshortenerdb?authSource=admin # Assuming 'mongo' is your MongoDB service name in Docker Compose
      # username: your_mongo_user # if you set up auth for mongo
      # password: your_mongo_password

api:
  gateway:
    public-base-url: http://localhost:9000

# Example custom property
greeting:
  message: "Shortener service is up!"